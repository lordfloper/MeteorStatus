AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: MeteorsStatus
Parameters:
  MeteorsDataBucketName:
    Type: String
    Default: meteorsdata
  NotificationEmail:
    Type: String
    Default: adrianfloperprogramming@gmail.com
Resources: 
  MeteorsStatus:
    Type: AWS::Serverless::Function
    Properties:
      Handler: MeteorsStatus.lambda_handler
      CodeUri: handler
      Runtime: python3.10
      MemorySize: 256
      Timeout: 60
      ReservedConcurrentExecutions: 1
      Environment:
        Variables:
          SNS_TOPIC_ARN: !Ref MeteorStatusNotification
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref MeteorsDataBucketName
        - SNSPublishMessagePolicy:
            TopicName: !GettAtt MeteorStatusNotification.TopicName
      Events:
        S3Event:
          Type: S3
          Properties:
            Bucket: !Ref MeteorsDataBucket
            Events: s3:ObjectCreated:*
  MeteorsDataBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties: 
      BucketName: !Ref MeteorsDataBucketName
      BucketEncryption: 
        ServerSideEncryptionConfiguration: 
          - ServerSideEncryptionByDefault: 
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
  MeteorStatusNotification:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref NotificationEmail
          Protocol: email
      TopicName: MeteorStatusNotification
Outputs:
  MeteorsDataBucket:
    Description: ''
    Value: !Ref MeteorsDataBucket
    Export:
      Name: !Sub MeteorsDataBucket
  